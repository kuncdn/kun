// Code generated by protoc-gen-go. DO NOT EDIT.
// source: labchan_account.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RetCodeType int32

const (
	RetCodeType_NO_MATCHED_API    RetCodeType = 0
	RetCodeType_LOGIN_REQUIRED    RetCodeType = 1
	RetCodeType_PERMISSION_DENIED RetCodeType = 2
	RetCodeType_ALLOW_ACCESS      RetCodeType = 3
)

var RetCodeType_name = map[int32]string{
	0: "NO_MATCHED_API",
	1: "LOGIN_REQUIRED",
	2: "PERMISSION_DENIED",
	3: "ALLOW_ACCESS",
}

var RetCodeType_value = map[string]int32{
	"NO_MATCHED_API":    0,
	"LOGIN_REQUIRED":    1,
	"PERMISSION_DENIED": 2,
	"ALLOW_ACCESS":      3,
}

func (x RetCodeType) String() string {
	return proto.EnumName(RetCodeType_name, int32(x))
}

func (RetCodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{0}
}

type InfoReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReq) Reset()         { *m = InfoReq{} }
func (m *InfoReq) String() string { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()    {}
func (*InfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{0}
}

func (m *InfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReq.Unmarshal(m, b)
}
func (m *InfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReq.Marshal(b, m, deterministic)
}
func (m *InfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReq.Merge(m, src)
}
func (m *InfoReq) XXX_Size() int {
	return xxx_messageInfo_InfoReq.Size(m)
}
func (m *InfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReq proto.InternalMessageInfo

func (m *InfoReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InfoResp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResp) Reset()         { *m = InfoResp{} }
func (m *InfoResp) String() string { return proto.CompactTextString(m) }
func (*InfoResp) ProtoMessage()    {}
func (*InfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{1}
}

func (m *InfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResp.Unmarshal(m, b)
}
func (m *InfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResp.Marshal(b, m, deterministic)
}
func (m *InfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResp.Merge(m, src)
}
func (m *InfoResp) XXX_Size() int {
	return xxx_messageInfo_InfoResp.Size(m)
}
func (m *InfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResp proto.InternalMessageInfo

func (m *InfoResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InfoResp) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type AnnotationReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnotationReq) Reset()         { *m = AnnotationReq{} }
func (m *AnnotationReq) String() string { return proto.CompactTextString(m) }
func (*AnnotationReq) ProtoMessage()    {}
func (*AnnotationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{2}
}

func (m *AnnotationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnotationReq.Unmarshal(m, b)
}
func (m *AnnotationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnotationReq.Marshal(b, m, deterministic)
}
func (m *AnnotationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnotationReq.Merge(m, src)
}
func (m *AnnotationReq) XXX_Size() int {
	return xxx_messageInfo_AnnotationReq.Size(m)
}
func (m *AnnotationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnotationReq.DiscardUnknown(m)
}

var xxx_messageInfo_AnnotationReq proto.InternalMessageInfo

func (m *AnnotationReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AnnotationResp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnotationResp) Reset()         { *m = AnnotationResp{} }
func (m *AnnotationResp) String() string { return proto.CompactTextString(m) }
func (*AnnotationResp) ProtoMessage()    {}
func (*AnnotationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{3}
}

func (m *AnnotationResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnotationResp.Unmarshal(m, b)
}
func (m *AnnotationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnotationResp.Marshal(b, m, deterministic)
}
func (m *AnnotationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnotationResp.Merge(m, src)
}
func (m *AnnotationResp) XXX_Size() int {
	return xxx_messageInfo_AnnotationResp.Size(m)
}
func (m *AnnotationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnotationResp.DiscardUnknown(m)
}

var xxx_messageInfo_AnnotationResp proto.InternalMessageInfo

func (m *AnnotationResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AnnotationResp) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PatchAnnotationReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchAnnotationReq) Reset()         { *m = PatchAnnotationReq{} }
func (m *PatchAnnotationReq) String() string { return proto.CompactTextString(m) }
func (*PatchAnnotationReq) ProtoMessage()    {}
func (*PatchAnnotationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{4}
}

func (m *PatchAnnotationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchAnnotationReq.Unmarshal(m, b)
}
func (m *PatchAnnotationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchAnnotationReq.Marshal(b, m, deterministic)
}
func (m *PatchAnnotationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchAnnotationReq.Merge(m, src)
}
func (m *PatchAnnotationReq) XXX_Size() int {
	return xxx_messageInfo_PatchAnnotationReq.Size(m)
}
func (m *PatchAnnotationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchAnnotationReq.DiscardUnknown(m)
}

var xxx_messageInfo_PatchAnnotationReq proto.InternalMessageInfo

func (m *PatchAnnotationReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PatchAnnotationReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PatchAnnotationResp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchAnnotationResp) Reset()         { *m = PatchAnnotationResp{} }
func (m *PatchAnnotationResp) String() string { return proto.CompactTextString(m) }
func (*PatchAnnotationResp) ProtoMessage()    {}
func (*PatchAnnotationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{5}
}

func (m *PatchAnnotationResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchAnnotationResp.Unmarshal(m, b)
}
func (m *PatchAnnotationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchAnnotationResp.Marshal(b, m, deterministic)
}
func (m *PatchAnnotationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchAnnotationResp.Merge(m, src)
}
func (m *PatchAnnotationResp) XXX_Size() int {
	return xxx_messageInfo_PatchAnnotationResp.Size(m)
}
func (m *PatchAnnotationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchAnnotationResp.DiscardUnknown(m)
}

var xxx_messageInfo_PatchAnnotationResp proto.InternalMessageInfo

func (m *PatchAnnotationResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *PatchAnnotationResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PermissionReq struct {
	Route                string   `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	Method               string   `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionReq) Reset()         { *m = PermissionReq{} }
func (m *PermissionReq) String() string { return proto.CompactTextString(m) }
func (*PermissionReq) ProtoMessage()    {}
func (*PermissionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{6}
}

func (m *PermissionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionReq.Unmarshal(m, b)
}
func (m *PermissionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionReq.Marshal(b, m, deterministic)
}
func (m *PermissionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionReq.Merge(m, src)
}
func (m *PermissionReq) XXX_Size() int {
	return xxx_messageInfo_PermissionReq.Size(m)
}
func (m *PermissionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionReq proto.InternalMessageInfo

func (m *PermissionReq) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *PermissionReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PermissionReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type PermissionResp struct {
	Id                   string      `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	RetCode              RetCodeType `protobuf:"varint,2,opt,name=RetCode,proto3,enum=proto.RetCodeType" json:"RetCode,omitempty"`
	Message              string      `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PermissionResp) Reset()         { *m = PermissionResp{} }
func (m *PermissionResp) String() string { return proto.CompactTextString(m) }
func (*PermissionResp) ProtoMessage()    {}
func (*PermissionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_830b5c1af1cf64ed, []int{7}
}

func (m *PermissionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionResp.Unmarshal(m, b)
}
func (m *PermissionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionResp.Marshal(b, m, deterministic)
}
func (m *PermissionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionResp.Merge(m, src)
}
func (m *PermissionResp) XXX_Size() int {
	return xxx_messageInfo_PermissionResp.Size(m)
}
func (m *PermissionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionResp.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionResp proto.InternalMessageInfo

func (m *PermissionResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PermissionResp) GetRetCode() RetCodeType {
	if m != nil {
		return m.RetCode
	}
	return RetCodeType_NO_MATCHED_API
}

func (m *PermissionResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.RetCodeType", RetCodeType_name, RetCodeType_value)
	proto.RegisterType((*InfoReq)(nil), "proto.InfoReq")
	proto.RegisterType((*InfoResp)(nil), "proto.InfoResp")
	proto.RegisterType((*AnnotationReq)(nil), "proto.AnnotationReq")
	proto.RegisterType((*AnnotationResp)(nil), "proto.AnnotationResp")
	proto.RegisterType((*PatchAnnotationReq)(nil), "proto.PatchAnnotationReq")
	proto.RegisterType((*PatchAnnotationResp)(nil), "proto.PatchAnnotationResp")
	proto.RegisterType((*PermissionReq)(nil), "proto.PermissionReq")
	proto.RegisterType((*PermissionResp)(nil), "proto.PermissionResp")
}

func init() { proto.RegisterFile("labchan_account.proto", fileDescriptor_830b5c1af1cf64ed) }

var fileDescriptor_830b5c1af1cf64ed = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x25, 0x8e, 0xd2, 0x94, 0xa1, 0x31, 0x66, 0x9b, 0x54, 0x69, 0x2e, 0x20, 0x9f, 0x10, 0x42,
	0x55, 0x55, 0x24, 0x0e, 0x5c, 0x90, 0x9b, 0x2c, 0xb0, 0x52, 0x12, 0x87, 0x75, 0x5a, 0x24, 0x0e,
	0x58, 0x5b, 0x7b, 0xc1, 0x56, 0x52, 0xaf, 0xc9, 0x6e, 0x0e, 0xfc, 0x07, 0x1f, 0x8c, 0xec, 0xdd,
	0xa4, 0x71, 0xea, 0x70, 0xb2, 0xde, 0x9b, 0x99, 0xf7, 0xc6, 0xb3, 0x0f, 0x7a, 0x4b, 0x76, 0x17,
	0x25, 0x2c, 0x0b, 0x59, 0x14, 0x89, 0x75, 0xa6, 0x2e, 0xf2, 0x95, 0x50, 0x02, 0xb5, 0xca, 0x8f,
	0x7b, 0x0e, 0x6d, 0x92, 0xfd, 0x14, 0x94, 0xff, 0x46, 0x36, 0x58, 0x24, 0xee, 0x37, 0x5e, 0x35,
	0x5e, 0x3f, 0xa5, 0x16, 0x89, 0xdd, 0x4b, 0x38, 0xd6, 0x25, 0x99, 0xef, 0xd7, 0x50, 0x17, 0x5a,
	0xf8, 0x9e, 0xa5, 0xcb, 0xbe, 0x55, 0x52, 0x1a, 0xb8, 0x2f, 0xa1, 0xe3, 0x65, 0x99, 0x50, 0x4c,
	0xa5, 0x22, 0xab, 0x93, 0x7c, 0x0f, 0xf6, 0x6e, 0x83, 0x16, 0xf6, 0x17, 0x65, 0xc7, 0x31, 0xb5,
	0xfc, 0x45, 0x21, 0x7c, 0xcb, 0x96, 0x6b, 0x5e, 0x0a, 0x9f, 0x50, 0x0d, 0xdc, 0x0f, 0x80, 0x66,
	0x4c, 0x45, 0xc9, 0x7f, 0xd5, 0x0f, 0xcc, 0x7e, 0x84, 0xd3, 0x47, 0xb3, 0x35, 0xc6, 0x7d, 0x68,
	0x4f, 0xb8, 0x94, 0xec, 0x17, 0x37, 0xff, 0xb4, 0x81, 0x6e, 0x00, 0x9d, 0x19, 0x5f, 0xdd, 0xa7,
	0x52, 0x1a, 0xdf, 0x2e, 0xb4, 0xa8, 0x58, 0x2b, 0x6e, 0xac, 0x35, 0x28, 0xd8, 0xb9, 0x58, 0xf0,
	0x6c, 0x73, 0x92, 0x12, 0xa0, 0x33, 0x38, 0x9a, 0x70, 0x95, 0x88, 0xb8, 0xdf, 0x2c, 0x69, 0x83,
	0xdc, 0x04, 0xec, 0x5d, 0xd1, 0x9a, 0x13, 0xbf, 0x85, 0x36, 0xe5, 0x6a, 0x28, 0x62, 0xbd, 0x90,
	0x7d, 0x85, 0xf4, 0xcb, 0x5d, 0x18, 0x76, 0xfe, 0x27, 0xe7, 0x74, 0xd3, 0xb2, 0xbb, 0x7e, 0xb3,
	0xb2, 0xfe, 0x9b, 0x1f, 0xf0, 0x6c, 0x67, 0x02, 0x21, 0xb0, 0xa7, 0x7e, 0x38, 0xf1, 0xe6, 0xc3,
	0x2f, 0x78, 0x14, 0x7a, 0x33, 0xe2, 0x3c, 0x29, 0xb8, 0xb1, 0xff, 0x99, 0x4c, 0x43, 0x8a, 0xbf,
	0xde, 0x10, 0x8a, 0x47, 0x4e, 0x03, 0xf5, 0xe0, 0xc5, 0x0c, 0xd3, 0x09, 0x09, 0x02, 0xe2, 0x4f,
	0xc3, 0x11, 0x9e, 0x12, 0x3c, 0x72, 0x2c, 0xe4, 0xc0, 0x89, 0x37, 0x1e, 0xfb, 0xdf, 0x42, 0x6f,
	0x38, 0xc4, 0x41, 0xe0, 0x34, 0xaf, 0xfe, 0x5a, 0xd0, 0xf6, 0x74, 0xb4, 0xd0, 0x25, 0x74, 0x3e,
	0x71, 0x15, 0x25, 0x37, 0x92, 0xaf, 0x8a, 0xec, 0x20, 0xdb, 0xec, 0x6c, 0x32, 0x36, 0x78, 0x5e,
	0xc1, 0x32, 0x47, 0x18, 0xce, 0x6e, 0xd9, 0x32, 0x8d, 0x99, 0xe2, 0xc5, 0xd0, 0xc3, 0x4d, 0x50,
	0xd7, 0xb4, 0x56, 0x6e, 0x3f, 0xe8, 0xd5, 0xb0, 0x32, 0x47, 0xd7, 0x70, 0xba, 0x35, 0x7e, 0x78,
	0xe8, 0xad, 0x46, 0x25, 0x37, 0x5b, 0x8d, 0xbd, 0x44, 0x8c, 0x4d, 0x50, 0xf6, 0x34, 0xce, 0x37,
	0x8e, 0x8f, 0x02, 0x38, 0x18, 0x1c, 0x2a, 0xc9, 0xfc, 0xba, 0xf5, 0xbd, 0xc9, 0xf2, 0xf4, 0xee,
	0xa8, 0xec, 0x78, 0xf7, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x42, 0x34, 0x25, 0xfd, 0x86, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountClient is the client API for Account service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountClient interface {
	// 读取用户详情
	FetchUserInfo(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error)
	// 验证用户权限
	ValidateUserPermission(ctx context.Context, in *PermissionReq, opts ...grpc.CallOption) (*PermissionResp, error)
	// 读取用户Annotation
	FetchUserAnnotation(ctx context.Context, in *AnnotationReq, opts ...grpc.CallOption) (*AnnotationResp, error)
	// 修改用户Annotation
	PatchUserAnnotation(ctx context.Context, in *PatchAnnotationReq, opts ...grpc.CallOption) (*PatchAnnotationResp, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) FetchUserInfo(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error) {
	out := new(InfoResp)
	err := c.cc.Invoke(ctx, "/proto.Account/FetchUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ValidateUserPermission(ctx context.Context, in *PermissionReq, opts ...grpc.CallOption) (*PermissionResp, error) {
	out := new(PermissionResp)
	err := c.cc.Invoke(ctx, "/proto.Account/ValidateUserPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) FetchUserAnnotation(ctx context.Context, in *AnnotationReq, opts ...grpc.CallOption) (*AnnotationResp, error) {
	out := new(AnnotationResp)
	err := c.cc.Invoke(ctx, "/proto.Account/FetchUserAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) PatchUserAnnotation(ctx context.Context, in *PatchAnnotationReq, opts ...grpc.CallOption) (*PatchAnnotationResp, error) {
	out := new(PatchAnnotationResp)
	err := c.cc.Invoke(ctx, "/proto.Account/PatchUserAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServer is the server API for Account service.
type AccountServer interface {
	// 读取用户详情
	FetchUserInfo(context.Context, *InfoReq) (*InfoResp, error)
	// 验证用户权限
	ValidateUserPermission(context.Context, *PermissionReq) (*PermissionResp, error)
	// 读取用户Annotation
	FetchUserAnnotation(context.Context, *AnnotationReq) (*AnnotationResp, error)
	// 修改用户Annotation
	PatchUserAnnotation(context.Context, *PatchAnnotationReq) (*PatchAnnotationResp, error)
}

// UnimplementedAccountServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServer struct {
}

func (*UnimplementedAccountServer) FetchUserInfo(ctx context.Context, req *InfoReq) (*InfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchUserInfo not implemented")
}
func (*UnimplementedAccountServer) ValidateUserPermission(ctx context.Context, req *PermissionReq) (*PermissionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateUserPermission not implemented")
}
func (*UnimplementedAccountServer) FetchUserAnnotation(ctx context.Context, req *AnnotationReq) (*AnnotationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchUserAnnotation not implemented")
}
func (*UnimplementedAccountServer) PatchUserAnnotation(ctx context.Context, req *PatchAnnotationReq) (*PatchAnnotationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchUserAnnotation not implemented")
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_FetchUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).FetchUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/FetchUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).FetchUserInfo(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ValidateUserPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ValidateUserPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/ValidateUserPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ValidateUserPermission(ctx, req.(*PermissionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_FetchUserAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnotationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).FetchUserAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/FetchUserAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).FetchUserAnnotation(ctx, req.(*AnnotationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_PatchUserAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PatchAnnotationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).PatchUserAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/PatchUserAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).PatchUserAnnotation(ctx, req.(*PatchAnnotationReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchUserInfo",
			Handler:    _Account_FetchUserInfo_Handler,
		},
		{
			MethodName: "ValidateUserPermission",
			Handler:    _Account_ValidateUserPermission_Handler,
		},
		{
			MethodName: "FetchUserAnnotation",
			Handler:    _Account_FetchUserAnnotation_Handler,
		},
		{
			MethodName: "PatchUserAnnotation",
			Handler:    _Account_PatchUserAnnotation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "labchan_account.proto",
}
